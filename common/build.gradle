/**
 * PROJECT INFORMATION:
 * The common project outlines all of the common features of both the
 * Spigot version of the plugin and the Sponge version. This will allow
 * for both the spigot and sponge versions to utilize the same API for
 * common resources such as the database, Exceptions, Containers, the
 * abstract professions and classes. This project CAN be built into a Jar
 * and utilized as a dependency, but for the projects I am compiling the
 * source code into the Spigot and Sponge Jars to reduce work of having
 * to include a common jar file when using the different versions of the
 * plugin.
 */
plugins {
    id "de.fuerstenau.buildconfig" version "1.1.8"
}

/**
 * REPOSITORIES: Dependency Repositories
 */
repositories {
    mavenLocal()
    mavenCentral()
}

/**
 * DEPENDENCIES: The modules that the common build requires
 */
dependencies {
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'com.google.guava', name: 'guava', version: '23.0'
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.34.0'

    provided group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.2'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.23'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.2'
}

/**
 * SOURCE SETS:
 * The main source sets for the common project.
 * This outlines the directories to be compiled and
 * included within the Jar
 */
sourceSets {
    main {
        java {
            srcDir "src/main/java"
        }
        resources {
            srcDir "src/main/resources"
        }
    }

    test {
        java {
            srcDir "src/test/java"
        }
        resources {
            srcDir "src/test/resources"
        }
    }
}

buildConfig {
    appName = project.name
    version = project.version

    clsName = 'BuildConfig'

    // TODO: Change this to be the correct package name in gradle.settings.
    packageName = 'com.creedfreak.common.utility'

    charset = 'UTF-8'

    buildConfigField('String', 'SPIGOT_VERSION', "${spigot_version}")
    buildConfigField('String', 'SPONGE_VERSION', "${sponge_version}")
    buildConfigField('String', 'COMMON_VERSION', "${common_version}")
}

idea.module.sourceDirs += file('build/gen/buildconfig/src/main')

task commonClean (type: Delete) {
    doFirst {
        println "Cleaning common directories"
    }

    delete 'build'
    delete 'out'
    followSymlinks = true

    group = "CP Common"
    description = "Cleans all of the build compilations for the common api"
}

/**
 * TESTING: The testing framework.
 */
test {
    useJUnitPlatform ()

    testLogging {
        showStandardStreams = true
    }
}